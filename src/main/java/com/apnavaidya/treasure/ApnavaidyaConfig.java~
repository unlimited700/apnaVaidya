package com.apnavaidya.treasure;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.context.annotation.PropertySources;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.data.web.config.EnableSpringDataWebSupport;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.web.client.RestTemplate;

import com.apnavaidya.treasure.http.HttpClientConfig;

@EnableAutoConfiguration
@Configuration
@ComponentScan("com.apnavaidya.treasure.*")
@EnableJpaRepositories("com.apnavaidya.treasure.dao")
@EnableAsync
@PropertySources({ @PropertySource(value = "classpath:database.properties", ignoreResourceNotFound = true),
		@PropertySource(value = "classpath:app.properties", ignoreResourceNotFound = true) })
@EnableSpringDataWebSupport
@EnableTransactionManagement
public class ApnavaidyaConfig {
	@Bean
	public RestTemplate getRestTemplate(@Qualifier("httpClientConfig") HttpClientConfig httpClientConfig) {
		return new RestTemplate(httpClientConfig.httpRequestFactory());
	}

@Bean
    public RestTemplate getRestTemplate(@Qualifier("httpClientConfig") HttpClientConfig httpClientConfig) {
        return new RestTemplate(httpClientConfig.httpRequestFactory());
    }

@Bean
    @Qualifier("tokenFilter")
    public TokenAuthenticaitonFilter getTokenAuthFilter() {
        return new TokenAuthenticaitonFilter();
    }

@Bean
    public FilterRegistrationBean filterRegistrationBean(@Qualifier("tokenFilter") TokenAuthenticaitonFilter tokenAuthenticaitonFilter) {
        FilterRegistrationBean registrationBean = new FilterRegistrationBean();
        registrationBean.setFilter(tokenAuthenticaitonFilter);


        registrationBean.setUrlPatterns(urls);
        registrationBean.setOrder(2);
        registrationBean.setDispatcherTypes(EnumSet.allOf(DispatcherType.class));
        return registrationBean;
    }

}
